module: skills.api_request.main
name: APIRequest
display_name: API Requests
author: teddybear082
tags:
  - API
  - Utility
  - Internet
description:
  en: Send HTTP requests to APIs with methods like GET, POST, PUT, etc. Combine it with the WebSearch skill to fetch API specs on-the-fly, so that your Wingman can interact with any API.
  de: Sende API-Anfragen mit verschiedenen Methoden wie GET, POST, PUT etc. Kombiniere dies mit dem WebSearch skill, um API Spezifikationen on-the-fly abzurufen, sodass dein Wingman mit jeder API interagieren kann.
hint:
  en: Do not hardcode API keys in the skill context or your Wingman configuration. Enter them during a conversation (preferrably by text) or store them in `/files/api_request_key_holder.yaml`.
  de: Schreibe keine API-Schl체ssel fest in den Skill-Kontext oder in deine Wingman-Konfiguration. Gib sie w채hrend eines Gespr채chs ein (am besten per Text) oder speichere sie in `/files/api_request_key_holder.yaml`.
examples:
  - en: Send a GET request to "https://api.example.com/data".
    de: Sende eine GET-Anfrage an "https://api.example.com/data".
  - en: Send a GET request with an API key.
    de: Sende eine GET-Anfrage mit einem API-Schl체ssel.
prompt: |
  # API REQUEST CAPABILITIES
  You have access to comprehensive HTTP request functionality for interacting with any API endpoint.

  ## SUPPORTED OPERATIONS
  - **HTTP Methods:** GET, POST, PUT, PATCH, DELETE
  - **Authentication:** Bearer tokens, API keys (x-api-key header), custom headers
  - **Data Formats:** JSON payloads, URL-encoded data, query parameters
  - **Error Handling:** Automatic retry logic with configurable delays

  ## EXECUTION GUIDELINES
  - Execute API requests immediately when requested by the user
  - Include appropriate headers, authentication, and request bodies as specified
  - Handle responses professionally and extract relevant information for the user
  - Use the `get_api_key` function to retrieve stored API keys when needed
  - Manage timeouts and retries according to configured parameters

  ## SECURITY PROTOCOLS
  - Never expose API keys in responses or logs
  - Retrieve API keys securely through available functions
  - Use proper authentication headers for secure endpoints
  - Handle sensitive data appropriately in all communications
custom_properties:
  - hint: Include the default headers every API request, allowing API endpoints to identify that the request came from Wingman AI.
    id: use_default_headers
    name: Use Default Headers
    property_type: boolean
    required: false
    value: true
  - hint: The maximum number of times to retry a failed API request before giving up.
    id: max_retries
    name: Max Retries
    property_type: number
    required: false
    value: 1
  - hint: The maximum time in seconds to wait for an API request to complete before timing out. This helps prevent requests from hanging indefinitely.
    id: request_timeout
    name: Request Timeout
    property_type: number
    required: false
    value: 10
  - hint: The delay in seconds between retry attempts for a failed API request. This allows time for the issue to resolve before trying again.
    id: retry_delay
    name: Retry Delay
    property_type: number
    required: false
    value: 5
